{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\src\\\\pages\\\\group\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport styles from './style.module.scss';\nimport Button from '../../components/button';\nimport Select from '../../components/select';\nimport FormControl from '../../components/formControl';\nimport { createGroups, updateGroups, deleteGroups } from \"../../services/firebase\";\nimport { GroupContext } from '../../context/groups';\nimport { CoachContext } from '../../context/coaches';\nvar formSchema = yup.object().shape({\n  coach: yup.string().min(3).required(),\n  description: yup.string().min(1).required(),\n  name: yup.string().min(1).required()\n});\n\nvar Group =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Group, _React$Component);\n\n  function Group() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Group);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Group)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      group: _this.props.group,\n      showReload: false\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setSubmitting, group;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref.setSubmitting;\n                group = _this.state.group;\n\n                if (!group) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 5;\n                return updateGroups(group.id, values);\n\n              case 5:\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.next = 9;\n                return createGroups(values);\n\n              case 9:\n                setSubmitting(false);\n\n                _this.props.onClose();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onCancel = function () {\n      _this.props.onClose();\n    };\n\n    _this.onDelete =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$props, group, onClose;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = _this.props, group = _this$props.group, onClose = _this$props.onClose;\n              _context2.next = 3;\n              return deleteGroups(group.id);\n\n            case 3:\n              onClose();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var oldGroup = this.state.group;\n      var newGroup = newProps.group;\n\n      if (newGroup && oldGroup && (newGroup.name !== oldGroup.name || newGroup.coach !== oldGroup.coach || newGroup.description !== oldGroup.description)) {\n        this.setState({\n          group: newGroup,\n          showReload: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onClose = this.props.onClose;\n      var _this$state = this.state,\n          group = _this$state.group,\n          showReload = _this$state.showReload;\n      var resource = group || {};\n      var coachesName = coaches.map(function (row) {\n        return {\n          label: row.name,\n          value: row.name\n        };\n      });\n      var node = React.createElement(\"div\", {\n        className: styles.modalContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.modalBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, resource.id ? \"Edit\" : \"Create\", \" Group\"), React.createElement(Formik, {\n        initialValues: {\n          name: resource.name || '',\n          coach: resource.coach || '',\n          description: resource.description || ''\n        },\n        validationSchema: formSchema,\n        onSubmit: this.onSubmit,\n        render: function render(props) {\n          var values = props.values,\n              handleChange = props.handleChange,\n              handleBlur = props.handleBlur,\n              handleSubmit = props.handleSubmit,\n              isSubmitting = props.isSubmitting,\n              handleReset = props.handleReset,\n              isValid = props.isValid;\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(FormControl, {\n            type: \"block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: values.name,\n            onChange: handleChange('name'),\n            onBlur: handleBlur('name'),\n            placeholder: \"Name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }), React.createElement(ErrorMessage, {\n            style: {\n              color: 'red'\n            },\n            name: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }), React.createElement(Select, {\n            options: coachesName,\n            value: values.coach,\n            onChange: handleChange('coach'),\n            onBlur: handleBlur('coach'),\n            placeholder: 'Coach',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }), React.createElement(ErrorMessage, {\n            name: \"Coach\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          })), React.createElement(FormControl, {\n            type: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: values.description,\n            onChange: handleChange('description'),\n            onBlur: handleBlur('description'),\n            placeholder: \"Description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }), React.createElement(ErrorMessage, {\n            name: \"Description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          })), React.createElement(FormControl, {\n            type: \"block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"primary\",\n            disabled: isSubmitting || !isValid,\n            onClick: handleSubmit,\n            label: resource.id ? 'Update' : 'Create',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }), resource.id && React.createElement(Button, {\n            type: \"danger\",\n            onClick: _this2.onDelete,\n            label: \"Delete\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }), React.createElement(Button, {\n            type: \"warning\",\n            onClick: _this2.onCancel,\n            label: \"Cancel\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          })), React.createElement(FormControl, {\n            type: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }), showReload && React.createElement(FormControl, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, \"This resource has been update.\", React.createElement(Button, {\n            type: \"link\",\n            onClick: function onClick() {\n              handleReset();\n\n              _this2.setState({\n                showReload: false\n              });\n            },\n            label: \"Click here\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }), \"to refresh\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n      return ReactDOM.createPortal(node, document.getElementById('modal-root'));\n    }\n  }]);\n\n  return Group;\n}(React.Component);\n\nGroup.contextType = GroupContext;\nexport default Group;","map":{"version":3,"sources":["C:\\Users\\joaqu\\OneDrive\\Escritorio\\Workspace\\tennisapp\\TenisApp2\\src\\pages\\group\\index.js"],"names":["React","ReactDOM","Formik","ErrorMessage","yup","styles","Button","Select","FormControl","createGroups","updateGroups","deleteGroups","GroupContext","CoachContext","formSchema","object","shape","coach","string","min","required","description","name","Group","state","group","props","showReload","onSubmit","values","setSubmitting","id","onClose","onCancel","onDelete","newProps","oldGroup","newGroup","setState","resource","coachesName","coaches","map","row","label","value","node","modalContainer","modalBox","handleChange","handleBlur","handleSubmit","isSubmitting","handleReset","isValid","color","createPortal","document","getElementById","Component","contextType"],"mappings":"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","sourcesContent":["import React  from 'react';\r\nimport ReactDOM  from 'react-dom'\r\nimport {Formik, ErrorMessage} from 'formik'\r\nimport * as yup from 'yup'\r\nimport styles from './style.module.scss';\r\nimport Button from '../../components/button'\r\nimport Select from '../../components/select'\r\nimport FormControl from '../../components/formControl'\r\nimport {createGroups,updateGroups,deleteGroups} from \"../../services/firebase\";\r\nimport { GroupContext } from '../../context/groups';\r\nimport { CoachContext } from '../../context/coaches';\r\n\r\n\r\n\r\nconst formSchema = yup.object().shape({\r\n  coach:yup.string().min(3).required(),\r\n  description:yup.string().min(1).required(),\r\n  name:yup.string().min(1).required()\r\n})\r\n\r\nclass Group extends React.Component {\r\n  state={\r\n    group: this.props.group,\r\n    showReload :false\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {\r\n        group: oldGroup,\r\n    } = this.state;\r\n    const {\r\n        group: newGroup\r\n    } = newProps;\r\n\r\n    if(\r\n      newGroup && oldGroup &&(\r\n        newGroup.name !== oldGroup.name ||\r\n        newGroup.coach !== oldGroup.coach ||\r\n        newGroup.description !== oldGroup.description \r\n     \r\n      )\r\n    ) {\r\n        this.setState({\r\n            group: newGroup,\r\n            showReload: true,\r\n        });\r\n    }\r\n}\r\n  \r\n\r\n\r\nonSubmit = async (values, { setSubmitting }) => {\r\n  const {\r\n      group,\r\n  } = this.state;\r\n\r\n  if (group) {\r\n    await updateGroups(group.id,values)\r\n  } else {\r\n    await createGroups(values)\r\n  }\r\n\r\n  setSubmitting(false);\r\n  this.props.onClose();\r\n}\r\n\r\n\r\n\r\n\r\nonCancel = () =>{\r\n  \r\n  this.props.onClose()\r\n}\r\n\r\nonDelete = async()=>{\r\n  const {\r\n    group,\r\n    onClose\r\n  } = this.props\r\n  await deleteGroups(group.id);\r\n  onClose()\r\n\r\n\r\n}\r\n\r\n  render() {\r\n\r\n    const{\r\n      onClose\r\n    }=this.props\r\n    const {\r\n      group,\r\n      showReload,\r\n  } = this.state;\r\n  const resource = group || {};\r\n  const coachesName=coaches.map(row =>{\r\n    return{label: row.name,\r\n      value: row.name}})\r\n      const node = (\r\n           <div className={styles.modalContainer}>\r\n             <div className={styles.modalBox}>\r\n              <h1 onClick={onClose}>{resource.id ? \"Edit\" : \"Create\" } Group</h1>\r\n              <Formik\r\n                initialValues={{\r\n                    name:resource.name ||'',\r\n                    coach:resource.coach ||'',\r\n                    description:resource.description ||''\r\n                    \r\n                }}\r\n                validationSchema={formSchema}\r\n                onSubmit={this.onSubmit}\r\n                render={props=>{\r\n                    const {\r\n                        values,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        handleReset,\r\n                        isValid\r\n                    }=props\r\n                    return(\r\n                        <React.Fragment>\r\n                        <FormControl type=\"block\">\r\n                        <input type=\"text\" className=\"form-control\"\r\n                  value={values.name}\r\n                  onChange={handleChange('name')}\r\n                  onBlur={handleBlur('name')}\r\n                  placeholder=\"Name\"\r\n                  />\r\n                  <ErrorMessage  style={{ color: 'red' }} name=\"name\"/>\r\n                  <Select\r\n               options={coachesName}\r\n              value={values.coach}\r\n              onChange={handleChange('coach')}\r\n              onBlur={handleBlur('coach')}\r\n              placeholder={'Coach'}\r\n\r\n              />\r\n                  <ErrorMessage  name=\"Coach\"/>\r\n                  \r\n              </FormControl>\r\n              <FormControl type=\"row\">\r\n              <input type=\"text\" className=\"form-control\"\r\n                  value={values.description}\r\n                  onChange={handleChange('description')}\r\n                  onBlur={handleBlur('description')}\r\n                  placeholder=\"Description\"\r\n                  />\r\n              <ErrorMessage name=\"Description\"/>\r\n\r\n              </FormControl> \r\n          \r\n                 \r\n              <FormControl type=\"block\" >\r\n              <Button \r\n              type=\"primary\"\r\n              disabled={isSubmitting || !isValid}\r\n              onClick={handleSubmit}\r\n              label={resource.id ? 'Update'  : 'Create'}\r\n              />\r\n                {resource.id &&\r\n              <Button \r\n              type=\"danger\"\r\n              onClick={this.onDelete}\r\n              label='Delete'\r\n              />\r\n            }\r\n              <Button \r\n              type=\"warning\"\r\n              \r\n              onClick={this.onCancel}\r\n              label='Cancel'\r\n              />\r\n              \r\n            </FormControl>\r\n              <FormControl type=\"row\" >\r\n            \r\n              </FormControl>\r\n              {showReload &&\r\n              <FormControl>\r\n                <div>\r\n                  This resource has been update.\r\n                <Button \r\n                type=\"link\"\r\n                 onClick={() =>{\r\n                handleReset()\r\n                this.setState({showReload:false})\r\n              }}\r\n              label='Click here'\r\n              />to refresh\r\n                </div>\r\n              </FormControl>\r\n              }\r\n              </React.Fragment> \r\n                    )}}\r\n              >\r\n              \r\n              </Formik>\r\n             </div>\r\n           \r\n           </div>\r\n    )\r\n    return ReactDOM.createPortal(node,document.getElementById('modal-root'))  \r\n  }\r\n}\r\n\r\n\r\nGroup.contextType = GroupContext;\r\n\r\nexport default Group;\r\n"]},"metadata":{},"sourceType":"module"}