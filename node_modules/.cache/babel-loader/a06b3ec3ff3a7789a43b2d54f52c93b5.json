{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\joaqu\\\\OneDrive\\\\Escritorio\\\\Workspace\\\\tennisapp\\\\TenisApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { auth, db } from './setup';\nexport function watchUserChanges(callback) {\n  var unsub = auth.onAuthStateChanged(function (user) {\n    if (user && !user.isAnonymous) {\n      var uid = user.uid,\n          email = user.email,\n          displayName = user.displayName;\n      callback({\n        id: uid,\n        email: email,\n        displayName: displayName\n      });\n    } else {\n      callback(null);\n    }\n  });\n  return unsub;\n}\nexport function watchStudents(callback) {\n  var unsub = db.collection('students').onSnapshot(function (snapshot) {\n    var docs = [];\n    snapshot.forEach(function (doc) {\n      var data = doc.data();\n      docs.push(_objectSpread({}, data));\n    });\n    callback(docs);\n  });\n  return unsub;\n}\nexport function watchGroups(callback) {\n  var unsub = db.collection('groups').onSnapshot(function (snapshot) {\n    var docs = [];\n    snapshot.forEach(function (doc) {\n      var data = doc.data();\n      docs.push(_objectSpread({}, data));\n    });\n    callback(docs);\n  });\n  return unsub;\n}","map":{"version":3,"sources":["C:\\Users\\joaqu\\OneDrive\\Escritorio\\Workspace\\tennisapp\\TenisApp2\\src\\services\\firebase\\watcher.js"],"names":["auth","db","watchUserChanges","callback","unsub","onAuthStateChanged","user","isAnonymous","uid","email","displayName","id","watchStudents","collection","onSnapshot","snapshot","docs","forEach","doc","data","push","watchGroups"],"mappings":";AAAA,SAASA,IAAT,EAAeC,EAAf,QAAyB,SAAzB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACvC,MAAMC,KAAK,GAAGJ,IAAI,CAACK,kBAAL,CAAwB,UAACC,IAAD,EAAU;AAC5C,QAAIA,IAAI,IAAI,CAACA,IAAI,CAACC,WAAlB,EAA+B;AAAA,UAEvBC,GAFuB,GAKvBF,IALuB,CAEvBE,GAFuB;AAAA,UAGvBC,KAHuB,GAKvBH,IALuB,CAGvBG,KAHuB;AAAA,UAIvBC,WAJuB,GAKvBJ,IALuB,CAIvBI,WAJuB;AAO3BP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,EAAE,EAAEH,GADC;AAELC,QAAAA,KAAK,EAALA,KAFK;AAGLC,QAAAA,WAAW,EAAXA;AAHK,OAAD,CAAR;AAKH,KAZD,MAYO;AACHP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GAhBa,CAAd;AAkBA,SAAOC,KAAP;AACH;AAED,OAAO,SAASQ,aAAT,CAAuBT,QAAvB,EAAiC;AACpC,MAAMC,KAAK,GAAGH,EAAE,CACXY,UADS,CACE,UADF,EAETC,UAFS,CAEE,UAACC,QAAD,EAAc;AACtB,QAAMC,IAAI,GAAG,EAAb;AAEAD,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,GAAD,EAAS;AACtB,UAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACCH,MAAAA,IAAI,CAACI,IAAL,mBAAcD,IAAd;AACJ,KAHD;AAKAhB,IAAAA,QAAQ,CAACa,IAAD,CAAR;AACH,GAXS,CAAd;AAaA,SAAOZ,KAAP;AACH;AAED,OAAO,SAASiB,WAAT,CAAqBlB,QAArB,EAA+B;AAClC,MAAMC,KAAK,GAAGH,EAAE,CACXY,UADS,CACE,QADF,EAETC,UAFS,CAEE,UAACC,QAAD,EAAc;AACtB,QAAMC,IAAI,GAAG,EAAb;AAEAD,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,GAAD,EAAS;AACtB,UAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACCH,MAAAA,IAAI,CAACI,IAAL,mBAAcD,IAAd;AACJ,KAHD;AAKAhB,IAAAA,QAAQ,CAACa,IAAD,CAAR;AACH,GAXS,CAAd;AAaA,SAAOZ,KAAP;AACH","sourcesContent":["import { auth, db } from './setup';\r\n\r\nexport function watchUserChanges(callback) {\r\n    const unsub = auth.onAuthStateChanged((user) => {\r\n        if (user && !user.isAnonymous) {\r\n            const {\r\n                uid,\r\n                email,\r\n                displayName,\r\n            } = user\r\n\r\n            callback({\r\n                id: uid,\r\n                email,\r\n                displayName,\r\n            });\r\n        } else {\r\n            callback(null);\r\n        }\r\n    });\r\n\r\n    return unsub;\r\n}\r\n\r\nexport function watchStudents(callback) {\r\n    const unsub = db\r\n        .collection('students')\r\n        .onSnapshot((snapshot) => {\r\n            const docs = [];\r\n\r\n            snapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                 docs.push({...data});\r\n            });\r\n\r\n            callback(docs);\r\n        });\r\n\r\n    return unsub;\r\n}\r\n\r\nexport function watchGroups(callback) {\r\n    const unsub = db\r\n        .collection('groups')\r\n        .onSnapshot((snapshot) => {\r\n            const docs = [];\r\n\r\n            snapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                 docs.push({...data});\r\n            });\r\n\r\n            callback(docs);\r\n        });\r\n\r\n    return unsub;\r\n}"]},"metadata":{},"sourceType":"module"}